# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches:
    - master
    
jobs:
   gradle:
    strategy:
      matrix:
        os: [self-hosted]
    runs-on: ${{ matrix.os }}
    
    env:
      projectName: plus-util
      targetDir: /home/seeminglyjs/actions-runner/
      fromDir: ./
#       GIT_STRATEGY: clone
    
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
#     - uses: gradle/gradle-build-action@v2
#       with:
#         arguments: build
#        build-root-directory: /home/seeminglyjs/github/plus-util     
#         build-root-directory: /home/seeminglyjs/project/plus-util    
#         gradle-executable: /home/seeminglyjs/github/plus-util  
        
#     - name: Setup Gradle
#       uses: gradle/gradle-build-action@v2
#       with:
#         gradle-executable: /home/seeminglyjs/github/$projectName
#         build-root-directory: /home/seeminglyjs/project/$projectName 

    - uses: actions/checkout@v3
    - run: touch ./src/main/resources/application.properties2
    - run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties2
    - run: cat ./src/main/resources/application.properties2
      
    - name: shutdown tomcat
      run: $targetDir/call-tomcat-stop.sh
      
    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Execute Gradle build
      run: ./gradlew build
      
    - name: copy war
      run: $targetDir/tomcat-webapps-deploy.sh   
            
    - name: start tomcat
      run: $targetDir/call-tomcat-start.sh
      
#     - name: Make Directory for deliver
#       run: mkdir -p $targetDir
      
#     - name: rsync delete
#       run: rsync -avz --delete $fromDir $targetDir

#     - name: after rsync
#       run: cd .. && rm -rf $projectName/*

